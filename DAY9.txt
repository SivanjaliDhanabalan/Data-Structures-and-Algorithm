1)Stack insertion and deletion:

package Sample;
public class Stack1 {
	int num[]=new int[6];
	int top=-1;
	public void push(int n)
	{
		if(top<num.length)
		{
		++top; 
		num[top]=n; 
	}
		else {
			System.out.println("Stack overflow");
		}
	}
	public void peek() {
		System.out.println("Peek element"+" "+num[top]);
	}
	public void pop()
	{
		if(top!=-1)
		{
		System.out.println("Popped element is"+" "+num[top--]);
		
	}
		else {
			System.out.println("Stack overflow");
		}
	}
	public static void main(String[] args) {
		Stack1 s=new Stack1();
		s.push(45);
		s.push(30);
		s.push(10);
		s.push(17);
		s.push(21);
		s.peek();
		s.pop();
		s.pop();
		s.peek();
		}
}

2)Implementation of Linked List using stack:

package Sample;
		class Node {
		    int data;
		    Node next;

		    public Node(int data) {
		        this.data = data;
		        this.next = null;
		    }
		}

		class Stack {
		    private Node top;

		    public Stack() {
		        this.top = null;
		    }

		    public boolean isEmpty() {
		        return top == null;
		    }

		    public void push(int data) {
		        Node newNode = new Node(data);
		        newNode.next = top;
		        top = newNode;
		        System.out.println("Pushed " + data + " onto the stack.");
		    }

		    public int pop() {
		        if (isEmpty()) {
		            System.out.println("Stack Underflow! Unable to pop.");
		            return -1;
		        }
		        int poppedData = top.data;
		        top = top.next;
		        return poppedData;
		    }

		    public int peek() {
		        if (isEmpty()) {
		            System.out.println("Stack is empty.");
		            return -1;
		        }
		        return top.data;
		    }
		}
		public class Stack2 {
		    public static void main(String[] args) {
		        Stack stack = new Stack();

		        stack.push(10);
		        stack.push(20);
		        stack.push(30);

		        System.out.println("Top element: " + stack.peek());
		        System.out.println("Popped element: " + stack.pop());
		        System.out.println("Is stack empty? " + stack.isEmpty());
		    }
		}


	



